# ====================================+
#==========================
# = Data Source
# ==============================================================
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update, validate, none)
# ==============================================================
spring.jpa.show-sql=false
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.properties.hibernate.generate_statistics=true
#spring.jpa.properties.hibernate.jdbc.batch_size=100000
#spring.jpa.properties.hibernate.order_inserts=true
# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Connection pool configuration (HikariCP)
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.maximumPoolSize=100
spring.datasource.hikari.idleTimeout=600000

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=SELECT username,password,status FROM users WHERE status=1 and username=?
spring.queries.roles-query=select u.username, r.role_name from users u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration
spring.mvc.converters.preferred-json-mapper = gson

#jms auto-ack
spring.jms.listener.acknowledge-mode=CLIENT
